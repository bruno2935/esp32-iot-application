[1/11] Performing build step for 'bootloader'
[1/1] cd /home/bruno/Documents/esp32-projects/esp32-iot-application/build/bootloader/esp-idf/esptool_py && /home/bruno/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/bruno/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/bruno/Documents/esp32-projects/esp32-iot-application/build/bootloader/bootloader.bin
Bootloader binary size 0x68d0 bytes. 0x730 bytes (6%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mqtt_demo_helpers.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/JobsDemoExample.c.obj
/home/bruno/Documents/esp32-projects/esp32-iot-application/main/JobsDemoExample.c:268:26: warning: 'xBuffer' defined but not used [-Wunused-variable]
  268 | static MQTTFixedBuffer_t xBuffer =
      |                          ^~~~~~~
/home/bruno/Documents/esp32-projects/esp32-iot-application/main/JobsDemoExample.c:253:25: warning: 'xNetworkContext' defined but not used [-Wunused-variable]
  253 | static NetworkContext_t xNetworkContext;
      |                         ^~~~~~~~~~~~~~~
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable esp32-iot-application.elf
[7/9] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 26 ELF sections
Successfully created esp32 image.
Generated /home/bruno/Documents/esp32-projects/esp32-iot-application/build/esp32-iot-application.bin
[8/9] cd /home/bruno/Documents/esp32-projects/esp32-iot-application/build/esp-idf/esptool_py && /home/bruno/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/bruno/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/bruno/Documents/esp32-projects/esp32-iot-application/build/partition_table/partition-table.bin /home/bruno/Documents/esp32-projects/esp32-iot-application/build/esp32-iot-application.bin
esp32-iot-application.bin binary size 0x13e370 bytes. Smallest app partition is 0x1f0000 bytes. 0xb1c90 bytes (36%) free.
[8/9] cd /home/bruno/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/bruno/esp/esp-idf -D "SERIAL_TOOL=/home/bruno/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/bruno/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/bruno/Documents/esp32-projects/esp32-iot-application/build -P /home/bruno/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 esp32-iot-application.bin 0x8000 partition_table/partition-table.bin 0xd000 ota_data_initial.bin
esptool.py v4.6.2
Serial port /dev/ttyACM0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 24:0a:c4:8b:6c:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0014efff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000d000 to 0x0000efff...
Compressed 26832 bytes to 16849...
Writing at 0x00001000... (50 %)
Writing at 0x00007680... (100 %)
Wrote 26832 bytes (16849 compressed) at 0x00001000 in 0.8 seconds (effective 258.8 kbit/s)...
Hash of data verified.
Compressed 1303408 bytes to 701702...
Writing at 0x00010000... (2 %)
Writing at 0x0001b3f8... (4 %)
Writing at 0x0002e6db... (6 %)
Writing at 0x00049040... (9 %)
Writing at 0x000568ca... (11 %)
Writing at 0x00061ba4... (13 %)
Writing at 0x0006f4f1... (16 %)
Writing at 0x000784dc... (18 %)
Writing at 0x0007dd2a... (20 %)
Writing at 0x000876c8... (23 %)
Writing at 0x00090a80... (25 %)
Writing at 0x00096679... (27 %)
Writing at 0x0009c01a... (30 %)
Writing at 0x000a1f95... (32 %)
Writing at 0x000a7a9d... (34 %)
Writing at 0x000ad380... (37 %)
Writing at 0x000b28c4... (39 %)
Writing at 0x000b80d7... (41 %)
Writing at 0x000bd9ea... (44 %)
Writing at 0x000c3677... (46 %)
Writing at 0x000c9071... (48 %)
Writing at 0x000ce9b5... (51 %)
Writing at 0x000d4965... (53 %)
Writing at 0x000da481... (55 %)
Writing at 0x000dfd72... (58 %)
Writing at 0x000e532a... (60 %)
Writing at 0x000ea60c... (62 %)
Writing at 0x000efab9... (65 %)
Writing at 0x000f4e1c... (67 %)
Writing at 0x000fa476... (69 %)
Writing at 0x000ffc28... (72 %)
Writing at 0x001056bf... (74 %)
Writing at 0x0010af30... (76 %)
Writing at 0x0011071e... (79 %)
Writing at 0x00116212... (81 %)
Writing at 0x0011c40d... (83 %)
Writing at 0x00121b6b... (86 %)
Writing at 0x0012a4be... (88 %)
Writing at 0x00132711... (90 %)
Writing at 0x00138c0c... (93 %)
Writing at 0x0013e8b0... (95 %)
Writing at 0x0014435b... (97 %)
Writing at 0x00149a19... (100 %)
Wrote 1303408 bytes (701702 compressed) at 0x00010000 in 17.7 seconds (effective 589.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 128...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (128 compressed) at 0x00008000 in 0.1 seconds (effective 339.2 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000d000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000d000 in 0.1 seconds (effective 458.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
